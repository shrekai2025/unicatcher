// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// 用户表 - 目前使用JWT策略，此表主要作为关联使用，实际会话不存储在数据库
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[] // 关联的第三方账号（如Google）
  sessions      Session[] // 会话记录（JWT策略下暂不使用）

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 第三方账号表 - 存储OAuth提供商的账号信息（如Google）
// 目前使用CredentialsProvider固定账号登录，此表暂未使用，但保留以备将来扩展
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// 会话表 - 用于数据库会话策略
// 当前使用JWT策略，此表暂不使用，但保留以备将来切换到数据库会话时使用
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 邮箱验证令牌表 - 用于邮箱验证功能
// 当前项目使用固定账号认证，此表暂不使用，但保留以备将来添加邮箱验证功能
model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

// 爬虫任务表 - 记录爬取任务的状态和配置
model SpiderTask {
  id          String   @id @default(cuid())
  type        String   // 任务类型：twitter_list
  listId      String   // Twitter List ID
  status      String   // 任务状态：created, queued, running, completed, failed
  result      String?  // 成功信息或错误信息（JSON格式）
  tweetCount  Int      @default(0) // 已爬取的推文数量
  startedAt   DateTime?
  completedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 关联的推文数据
  tweets Tweet[]

  @@index([status])
  @@index([type])
  @@index([listId])
}

// 推文数据表 - 存储爬取到的推文内容
model Tweet {
  id            String   @id // 推文ID（从URL提取的数字）
  content       String   // 推文正文
  userNickname  String   // 用户昵称（显示名）
  userUsername  String   // 用户名（@handle）
  replyCount    Int      @default(0) // 评论数
  retweetCount  Int      @default(0) // 转发数
  likeCount     Int      @default(0) // 点赞数
  viewCount     Int      @default(0) // 浏览数
  isRT          Boolean  @default(false) // 是否为被转推的推文
  isReply       Boolean  @default(false) // 是否为回复推文
  imageUrls     String?  // 推文配图URLs（JSON数组格式，不含用户头像）
  profileImageUrl String? // 用户头像URL
  videoUrls     String?  // 视频相关URLs（JSON格式：{preview, video}）
  tweetUrl      String   // 推文完整链接
  publishedAt   BigInt   // 发推时间戳
  listId        String   // 来源List ID
  scrapedAt     BigInt   // 爬取时间戳
  
  // 数据分析相关字段
  analysisStatus    String?   // 分析状态: pending, synced, analyzed, failed
  syncedAt          DateTime? // 数据同步时间
  analyzedAt        DateTime? // 分析完成时间
  analysisBatchId   String?   // 分析批次ID
  
  // AI处理相关字段
  keywords          String?   // AI提取的关键词（JSON数组格式）- 暂时保留
  topicTags         String?   // 命中的主题标签（JSON数组格式）
  contentTypes      String?   // 内容类型（JSON数组格式）- 如教程、产品介绍等
  isValueless       Boolean?  // 是否为无价值推文（打招呼、日常生活等）
  aiProcessedAt     DateTime? // AI处理完成时间
  aiProcessStatus   String?   // AI处理状态: pending, processing, completed, failed
  aiRetryCount      Int      @default(0) // AI处理重试次数
  
  // 翻译相关字段
  translatedContent     String?   // 翻译后的中文内容
  originalLanguage      String?   // 原始语言代码（如: en, ja, ko等）
  isTranslated          Boolean   @default(false) // 是否已翻译
  translationProvider   String?   // 翻译供应商: openai, zhipu, openai-badger
  translationModel      String?   // 翻译使用的模型
  translatedAt          DateTime? // 翻译时间
  
  // 逻辑删除相关字段
  isDeleted  Boolean   @default(false) // 是否已被逻辑删除
  deletedAt  DateTime? // 删除时间
  deletedBy  String?   // 删除操作的用户
  
  // 关联任务
  taskId     String
  task       SpiderTask @relation(fields: [taskId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([listId])
  @@index([publishedAt])
  @@index([taskId])
  @@index([analysisStatus])
  @@index([syncedAt])
  @@index([isDeleted])
  @@index([isDeleted, publishedAt])
  @@index([isDeleted, listId])
  @@index([aiProcessStatus])
  @@index([userUsername])
  @@index([isDeleted, aiProcessStatus])
  @@index([isDeleted, listId, publishedAt])
}

// 推文处理任务表 - 记录单推文处理任务的状态
model TweetProcessTask {
  id            String    @id @default(cuid())
  tweetId       String    // 目标推文ID
  taskType      String    // 任务类型: update_data, crawl_comments, generate_comments
  status        String    // 任务状态: queued, running, completed, failed
  result        String?   // 任务结果（JSON格式）
  errorMessage  String?   // 错误信息
  startedAt     DateTime? // 开始时间
  completedAt   DateTime? // 完成时间
  lastUpdatedAt DateTime? // 数据最后更新时间（用于10分钟检查）

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([tweetId, taskType])
  @@index([status])
  @@index([lastUpdatedAt])
  @@index([createdAt])
}

// 推文评论表 - 存储推文的评论数据
model TweetComment {
  id                String    @id @default(cuid())
  tweetId           String    // 推文ID
  commentId         String    @unique // 评论ID
  content           String    // 评论内容
  authorUsername    String    // 评论作者用户名
  authorNickname    String    // 评论作者昵称
  authorProfileImage String?  // 评论作者头像
  replyCount        Int       @default(0) // 回复数
  likeCount         Int       @default(0) // 点赞数
  publishedAt       BigInt    // 发布时间戳
  scrapedAt         BigInt    // 爬取时间戳
  isReply           Boolean   @default(false) // 是否为回复
  parentCommentId   String?   // 父评论ID

  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  @@index([tweetId, publishedAt])
  @@index([commentId])
  @@index([tweetId])
  @@index([parentCommentId])
}

// 评论爬取会话记录表 - 记录评论爬取任务的状态
model CommentCrawlSession {
  id              String    @id @default(cuid())
  tweetId         String    // 推文ID
  status          String    // 状态: running, completed, failed
  totalComments   Int       @default(0) // 总评论数
  newComments     Int       @default(0) // 新增评论数
  lastCommentId   String?   // 最后处理的评论ID
  isIncremental   Boolean   @default(false) // 是否为增量更新

  startedAt       DateTime  @default(now())
  completedAt     DateTime?

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@index([tweetId])
  @@index([status])
  @@index([startedAt])
}

// AI生成评论记录表 - 记录AI评论生成的历史
model AIGeneratedComment {
  id                      String    @id @default(cuid())
  tweetId                 String    // 推文ID
  userInfo                String?   // 用户提供的额外信息
  systemPrompt            String?   // 自定义系统提示词
  commentLength           String    // 评论长度: short, medium, long
  commentCount            Int       // 生成评论数量
  generatedComments       String    // 生成的评论（JSON数组格式）
  basedOnExisting         Boolean   @default(false) // 是否基于现有评论
  existingCommentsSnapshot String?  // 现有评论快照（JSON格式）
  aiProvider              String    // AI供应商
  aiModel                 String    // AI模型

  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt

  @@index([tweetId])
  @@index([createdAt])
}

// 数据同步记录表 - 记录外部系统的数据获取历史
model DataSyncRecord {
  id            String    @id @default(cuid())
  tweetIds      String    // JSON数组，记录本次同步的推文ID
  batchId       String    @unique // 批次ID
  syncedAt      DateTime  @default(now()) // 同步时间
  analyzedAt    DateTime? // 分析完成时间
  requestSystem String?   // 请求的外部系统标识
  tweetCount    Int       // 本次同步的推文数量
  status        String    @default("synced") // synced, analyzed, failed, extracting
  errorMessage  String?   // 错误信息
  
  // 数据提取相关字段
  extractType   String    @default("analysis") // 提取类型: analysis, data_export
  listId        String?   // 过滤的List ID
  username      String?   // 过滤的用户名
  isReExtract   Boolean   @default(false) // 是否为重复提取
  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([status])
  @@index([syncedAt])
  @@index([batchId])
  @@index([extractType])
  @@index([createdAt])
}

// 主题标签配置表 - 管理AI处理时需要匹配的主题标签
model TopicTag {
  id          String   @id @default(cuid())
  name        String   @unique // 主题标签名称
  description String?  // 标签描述
  isActive    Boolean  @default(true) // 是否启用
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([isActive])
  @@index([name])
}

// 内容类型配置表 - 管理AI处理时需要匹配的内容类型
model ContentType {
  id          String   @id @default(cuid())
  name        String   @unique // 内容类型名称（如：教程、产品介绍、产品试用等）
  description String?  // 类型描述
  isActive    Boolean  @default(true) // 是否启用
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([isActive])
  @@index([name])
}

// AI处理记录表 - 记录AI批处理的历史和状态
model AIProcessRecord {
  id            String    @id @default(cuid())
  batchId       String    @unique // 批次ID
  status        String    // 处理状态: processing, completed, failed, cancelled
  totalTweets   Int       @default(0) // 总推文数
  processedTweets Int     @default(0) // 已处理推文数
  failedTweets  Int       @default(0) // 处理失败推文数
  startedAt     DateTime  @default(now()) // 开始时间
  completedAt   DateTime? // 完成时间
  errorMessage  String?   // 错误信息
  
  // 处理配置
  filterConfig  String?   // 筛选配置（JSON格式）
  aiProvider    String    @default("openai") // AI提供商
  aiModel       String    @default("gpt-4o") // AI模型
  systemPrompt  String?   // 系统提示词
  batchProcessingMode String? @default("optimized") // 批量处理模式
  
  // 详细记录 - 新增字段
  requestDetails String?  // AI请求详情（JSON格式，包含完整请求参数）
  responseDetails String? // AI响应详情（JSON格式，包含原始响应和解析结果）
  processingLogs String?  // 处理日志（JSON数组格式，记录关键步骤）
  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([status])
  @@index([startedAt])
  @@index([batchId])
  @@index([createdAt])
}

// List ID记录表 - 存储用户创建的List ID和名称
model ListIdRecord {
  id        String   @id @default(cuid())
  listId    String   // Twitter List ID
  name      String   // 用户自定义的名称
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([listId]) // 确保同一个listId不会重复
  @@index([listId])
  @@index([createdAt])
}
